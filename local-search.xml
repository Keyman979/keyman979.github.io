<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/31/cookie/"/>
    <url>/2022/08/31/cookie/</url>
    
    <content type="html"><![CDATA[<h2 id="Cookie的基本使用"><a href="#Cookie的基本使用" class="headerlink" title="Cookie的基本使用"></a>Cookie的基本使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.Cookie;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">*  Cookie的基本使用：</span><br><span class="hljs-comment">*       cookie的发送：</span><br><span class="hljs-comment">              //1.创建Cookie对象 设置数据</span><br><span class="hljs-comment">              //2.发送cookie对象到客户端浏览器，使用response对象</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/cookiedemo01&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo01</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo01...&quot;</span>);<br>        <span class="hljs-comment">//1.创建Cookie对象 设置数据</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;zhangsan&quot;</span>);<br>        <span class="hljs-comment">//2.发送cookie对象到客户端浏览器，使用response对象</span><br>        response.addCookie(cookie);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">*  Cookie的基本使用：</span><br><span class="hljs-comment">*       cookie的接收：</span><br><span class="hljs-comment">              //3.获取客户端携带的所有cookie 使用request对象</span><br><span class="hljs-comment">              //4.遍历cookie数组 得到每一个cookie对象</span><br><span class="hljs-comment">              //5.使用cookie对象方法获取数据</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/cookiedemo02&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo02</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo02...&quot;</span>);<br>        <span class="hljs-comment">//3.获取客户端携带的所有cookie 使用request对象</span><br>        Cookie[] cookies = request.getCookies();<br>        <span class="hljs-comment">//4.遍历cookie数组 得到每一个cookie对象</span><br>        <span class="hljs-keyword">for</span> (Cookie cookie : cookies) &#123;<br>            <span class="hljs-comment">//5.使用cookie对象方法获取数据</span><br>            System.out.println(cookie.getName() + <span class="hljs-string">&quot; &quot;</span> + cookie.getValue());<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>使用Cookie工具类获取指定名称的cookie对象</p><blockquote><p>CookieUtils</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.http.Cookie;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieUtils</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取指定的cookie</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> cookies cookie数组</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> name    cookie对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> cookie对象</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Cookie <span class="hljs-title function_">getCookie</span><span class="hljs-params">(Cookie[] cookies, String name)</span> &#123;<br>        <span class="hljs-comment">//如果cookies数组为null 则没有cookie对象 直接返回null</span><br>        <span class="hljs-keyword">if</span> (cookies == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-comment">//如果有携带cookie，遍历cookies数组，根据指定的cookie名称获取</span><br>        <span class="hljs-keyword">for</span> (Cookie cookie : cookies) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">cookieName</span> <span class="hljs-operator">=</span> cookie.getName();<br>            <span class="hljs-keyword">if</span> (cookieName.equals(name)) &#123;<br>                <span class="hljs-comment">//找到了 指定的cookie对象</span><br>                <span class="hljs-keyword">return</span> cookie;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">//没有找到指定的cookie 返回null</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">*  使用Cookie工具类获取指定名称的cookie对象</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/cookiedemo03&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo03</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo03...&quot;</span>);<br>        <span class="hljs-comment">//1.获取客户端携带的所有cookie 使用request对象</span><br>        Cookie[] cookies = request.getCookies();<br>        <span class="hljs-comment">//2.使用Cookie工具类获取指定名称的cookie对象</span><br>        <span class="hljs-comment">//Cookie cookie = CookieUtils.getCookie(cookies, &quot;name&quot;);</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> CookieUtils.getCookie(cookies, <span class="hljs-string">&quot;address&quot;</span>);<br>        <span class="hljs-keyword">if</span> (cookie == <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;没有次cookie对象&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//System.out.println(&quot;cookie名称为name的cookie值：&quot; + cookie.getValue());</span><br>            System.out.println(<span class="hljs-string">&quot;cookie名称为name的cookie值：&quot;</span> + URLEncoder.encode(cookie.getValue(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Cookie的进阶"><a href="#Cookie的进阶" class="headerlink" title="Cookie的进阶"></a>Cookie的进阶</h2><blockquote><h3 id="Cookie的进阶-设置粗活时间："><a href="#Cookie的进阶-设置粗活时间：" class="headerlink" title="Cookie的进阶-设置粗活时间："></a>Cookie的进阶-设置粗活时间：</h3><h4 id="cookie的发送："><a href="#cookie的发送：" class="headerlink" title="cookie的发送："></a>cookie的发送：</h4><pre><code class="hljs">    1. 创建Cookie对象 设置数据    1. 设置Cookie对象的存活时间    1. 发送cookie对象到客户端浏览器，使用response对象</code></pre><h4 id="存活时间"><a href="#存活时间" class="headerlink" title="存活时间"></a>存活时间</h4><ol><li>正整数：表示当前Cookie对象的存活时间，单位是s，过期就会被删除</li><li>0: 删除当前cookie</li><li>负数：默认值，默认情况，表示当前Cookie对象是会话级别，浏览器一关闭，则cookie对象被销毁</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(&quot;/cookiedemo04&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo04</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo04...&quot;</span>);<br>        <span class="hljs-comment">//1.创建Cookie对象 设置数据</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>);<br>        <span class="hljs-comment">//2.发设置Cookie对象的存活时间</span><br>        cookie.setMaxAge(<span class="hljs-number">60</span>);  <span class="hljs-comment">//正整数 时间单位为秒</span><br><br>        <span class="hljs-comment">//3.发送cookie对象到客户端浏览器，使用response对象</span><br>        response.addCookie(cookie);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><h3 id="Cookie的进阶-存储中文及特殊字符："><a href="#Cookie的进阶-存储中文及特殊字符：" class="headerlink" title="Cookie的进阶-存储中文及特殊字符："></a>Cookie的进阶-存储中文及特殊字符：</h3><ol><li>存时编码：URLEncoder.encode(cookieValue, “UTF-8”);</li><li>取时解码：URLEncoder.encode(cookieValue, “UTF-8”);</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(&quot;/cookiedemo05&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo05</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo05...&quot;</span>);<br>        <span class="hljs-comment">//1.创建Cookie对象 设置数据</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;address&quot;</span>, URLEncoder.encode(<span class="hljs-string">&quot;肇庆市 鼎湖区&quot;</span>, <span class="hljs-string">&quot;UTF-8&quot;</span>));<br><br>        <span class="hljs-comment">//2.发送cookie对象到客户端浏览器，使用response对象</span><br>        response.addCookie(cookie);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><h3 id="Cookie的进阶-cookie路径设置："><a href="#Cookie的进阶-cookie路径设置：" class="headerlink" title="Cookie的进阶-cookie路径设置："></a>Cookie的进阶-cookie路径设置：</h3><h4 id="cookie的发送：-1"><a href="#cookie的发送：-1" class="headerlink" title="cookie的发送："></a>cookie的发送：</h4><ol><li>创建Cookie对象 设置数据</li><li>设置cookie存放路径</li><li>发送cookie对象到客户端浏览器，使用response对象</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(&quot;/cookiedemo06&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo06</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo06...&quot;</span>);<br>        <span class="hljs-comment">//1.创建Cookie对象 设置数据</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;nickname&quot;</span>, <span class="hljs-string">&quot;laozhang&quot;</span>);<br><br>        <span class="hljs-comment">//如果不设置，则默认为访问当前资源所在的路径/day25， eg:http://localhost:8080/day25/cookieDemo06</span><br>        <span class="hljs-comment">//2.设置cookie对象存放路径</span><br>        <span class="hljs-comment">//cookie.setPath(&quot;/day25/cc&quot;);</span><br>        cookie.setPath(request.getContextPath());<span class="hljs-comment">//request.getContextPath()=/day25</span><br><br>        <span class="hljs-comment">//3.发送cookie对象到客户端浏览器，使用response对象</span><br>        response.addCookie(cookie);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">*  访问指定路径下的cookie对象</span><br><span class="hljs-comment">*   /cc/dd下的nickname</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/cc/cookiedemo07&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CookieDemo07</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;CookieDemo03...&quot;</span>);<br>        <span class="hljs-comment">//1.获取客户端携带的所有cookie 使用request对象</span><br>        Cookie[] cookies = request.getCookies();<br>        <span class="hljs-comment">//2.使用Cookie工具类获取指定名称的cookie对象</span><br>        <span class="hljs-comment">//Cookie cookie = CookieUtils.getCookie(cookies, &quot;name&quot;);</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> CookieUtils.getCookie(cookies, <span class="hljs-string">&quot;nickname&quot;</span>);<br>        <span class="hljs-keyword">if</span> (cookie == <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;没有次cookie对象&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//System.out.println(&quot;cookie名称为name的cookie值：&quot; + cookie.getValue());</span><br>            System.out.println(<span class="hljs-string">&quot;cookie名称为nickname的cookie值：&quot;</span> + URLEncoder.encode(cookie.getValue(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><h3 id="记录用户上次访问的时间"><a href="#记录用户上次访问的时间" class="headerlink" title="记录用户上次访问的时间"></a>记录用户上次访问的时间</h3><p>​核心点：用户如果访问过该网站，会将用户的上次访问时间存入cookie写给客户端浏览器</p><h3 id="实现思路："><a href="#实现思路：" class="headerlink" title="实现思路："></a>实现思路：</h3><ol><li><p>判断用户是否是第一次访问【判断目标cookie【lastTime】是否为null】</p></li><li><p>如果为null：第一次访问</p><p>2.1: 获取当前系统时间</p><p>2.2: 存入名称lastTime的cookie中，发送给浏览器</p><p>2.3: 响应用户”你是第一次访问”</p></li><li><p>如果不为null：不是第一次访问</p><p>3.1: 从名称为lastTime的cookie对象中获取上一次访问时间</p><p>3.2: 获取当前系统时间 存入名称lastTime的cookie中，发送给浏览器</p><p>3.3: 响应用户”你上次访问的时间是：xxx”</p></li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(&quot;/remember&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RememberServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br><br>        <span class="hljs-comment">//0.解决响应中文乱码</span><br>        response.setContentType(<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span>);<br><br>        <span class="hljs-comment">//1.判断用户是否是第一次访问【判断目标cookie【lastTime】是否为null】</span><br>        <span class="hljs-comment">//1.1：获取客户端携带的所有cookie 使用request对象</span><br>        Cookie[] cookies = request.getCookies();<br>        <span class="hljs-comment">//1.2：使用Cookie工具类获取名称为lastTime的cookie对象</span><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> CookieUtils.getCookie(cookies, <span class="hljs-string">&quot;lastTime&quot;</span>);<br>        <span class="hljs-keyword">if</span> (cookie == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">//2.如果为null：第一次访问</span><br>            <span class="hljs-comment">//2.1：获取当前系统时间</span><br>            <span class="hljs-type">Date</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">dateStr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;YYYY-MM-dd HH:mm:ss&quot;</span>).format(date);<br><br>            <span class="hljs-comment">//2.2：存入名称lastTime的cookie中，发送给浏览器  【cookie存值有特殊字符需要编码】</span><br>            <span class="hljs-type">Cookie</span> <span class="hljs-variable">lastTimecookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;lastTime&quot;</span>, URLEncoder.encode(dateStr, <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            lastTimecookie.setMaxAge(<span class="hljs-number">60</span>*<span class="hljs-number">60</span>*<span class="hljs-number">24</span>*<span class="hljs-number">5</span>);<span class="hljs-comment">//设置Cookie有效时间为5天</span><br>            response.addCookie(lastTimecookie);<br><br>            <span class="hljs-comment">//2.3：响应用户&quot;你是第一次访问&quot;</span><br>            response.getWriter().print(<span class="hljs-string">&quot;你是第一次访问&quot;</span>);<br><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//3.如果不为null：不是第一次访问</span><br>            <span class="hljs-comment">//3.1：从名称为lastTime的cookie对象中获取上一次访问时间   【cookie取值有特殊字符需要解码】</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">lastTime</span> <span class="hljs-operator">=</span> URLDecoder.decode(cookie.getValue(), <span class="hljs-string">&quot;UTF-8&quot;</span>);<br><br>            <span class="hljs-comment">//3.2：获取当前系统时间 存入名称lastTime的cookie中，发送给浏览器</span><br>            <span class="hljs-type">Date</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">dateStr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;YYYY-MM-dd HH:mm:ss&quot;</span>).format(date);<br>            <span class="hljs-type">Cookie</span> <span class="hljs-variable">lastTimecookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;lastTime&quot;</span>, URLEncoder.encode(dateStr, <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            lastTimecookie.setMaxAge(<span class="hljs-number">60</span>*<span class="hljs-number">60</span>*<span class="hljs-number">24</span>*<span class="hljs-number">5</span>);<span class="hljs-comment">//设置Cookie有效时间为5天</span><br>            response.addCookie(lastTimecookie);<br>            <span class="hljs-comment">//3.3：响应用户&quot;你上次访问的时间是：xxx&quot;</span><br>            response.getWriter().print(<span class="hljs-string">&quot;你是上次访问的时间是：&quot;</span> + lastTime);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="案例实现"><a href="#案例实现" class="headerlink" title="案例实现"></a>案例实现</h2><blockquote><h3 id="案例环境搭建"><a href="#案例环境搭建" class="headerlink" title="案例环境搭建"></a>案例环境搭建</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-number">1</span>.准备数据库 创建表 插入测试数据<br><span class="hljs-number">2</span>.创建javaWeb Maven项目【war】添加依赖<br><span class="hljs-number">3</span>.添加配置文件<br>    db.properties<br>    mybatis-config.<span class="hljs-keyword">xml</span><br>    <span class="hljs-title">log4j</span>.properties<br><span class="hljs-number">4</span>.创建javabean    tb_user--<span class="hljs-keyword">User</span><br><span class="hljs-title">5</span>.创建dao接口和映射文件<br><span class="hljs-number">6</span>.添加页面到项目中<br>    register.html<br>    login.html<br><span class="hljs-number">7</span>.运行测试<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>db.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">jdbc.driverClass</span>=<span class="hljs-string">com.mysql.jdbc.Driver</span><br><span class="hljs-attr">jdbc.url</span>=<span class="hljs-string">jdbc:mysql://localhost:3306/数据库名称?useSSL=false&amp;serverTimezone=UTC</span><br><span class="hljs-attr">jdbc.username</span>=<span class="hljs-string">用户名</span><br><span class="hljs-attr">jdbc.password</span>=<span class="hljs-string">密码</span><br></code></pre></td></tr></table></figure><blockquote><p>mybatis-config.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">configuration</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--configuration:跟标签--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 1.引入外部properties资源文件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;db.properties&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 2.批量设置别名--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.itz.bean&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 3.数据库连接环境配置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">environments</span> <span class="hljs-attr">default</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">environment</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">transactionManager</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;JDBC&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span><br>                <span class="hljs-comment">&lt;!--数据库驱动类--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.driverClass&#125;&quot;</span>/&gt;</span><br>                <span class="hljs-comment">&lt;!--数据库连接url--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span><br>                <span class="hljs-comment">&lt;!--数据库用户名--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span><br>                <span class="hljs-comment">&lt;!--数据库密码--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">environment</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">environments</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 4.引入映射文件 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--扫描接口批量引入 【推荐】  name:dao接口所在的包名--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.itz.dao&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>Javabean tb_user–User</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br>  <span class="hljs-comment">// get set 省略</span><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>创建dao接口和映射文件 此处用注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> &#123;<br>  <span class="hljs-meta">@Select(&quot;select * from tb_user where username = #&#123;username&#125;&quot;)</span><br>    User <span class="hljs-title function_">selectByUsername</span><span class="hljs-params">(String username)</span>;<br><br>  <span class="hljs-meta">@Insert(&quot;insert into tb_user values (null, #&#123;username&#125;, #&#123;password&#125;)&quot;)</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(User user)</span>;<br><br>  <span class="hljs-meta">@Select(&quot;select * from tb_user where username = #&#123;username&#125; and password = #&#123;password&#125;&quot;)</span><br>    User <span class="hljs-title function_">select</span><span class="hljs-params">(User user)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>工具类-生成验证码 CheckCodeUtil</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 生成验证码工具类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CheckCodeUtil</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">VERIFY_CODES</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输出随机验证码图片流,并返回验证码值（一般传入字节输出流，响应response页面端，Web项目用的较多）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> w</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> h</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> os</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> verifySize</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">outputVerifyImage</span><span class="hljs-params">(<span class="hljs-type">int</span> w, <span class="hljs-type">int</span> h, OutputStream os, <span class="hljs-type">int</span> verifySize)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">verifyCode</span> <span class="hljs-operator">=</span> generateVerifyCode(verifySize);<br>        outputImage(w, h, os, verifyCode);<br>        <span class="hljs-keyword">return</span> verifyCode;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 使用系统默认字符源生成验证码</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> verifySize 验证码长度</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">generateVerifyCode</span><span class="hljs-params">(<span class="hljs-type">int</span> verifySize)</span> &#123;<br>        <span class="hljs-keyword">return</span> generateVerifyCode(verifySize, VERIFY_CODES);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 使用指定源生成验证码</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> verifySize 验证码长度</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sources    验证码字符源</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">generateVerifyCode</span><span class="hljs-params">(<span class="hljs-type">int</span> verifySize, String sources)</span> &#123;<br>        <span class="hljs-comment">// 未设定展示源的字码，赋默认值大写字母+数字</span><br>        <span class="hljs-keyword">if</span> (sources == <span class="hljs-literal">null</span> || sources.length() == <span class="hljs-number">0</span>) &#123;<br>            sources = VERIFY_CODES;<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">codesLen</span> <span class="hljs-operator">=</span> sources.length();<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">rand</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>(System.currentTimeMillis());<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">verifyCode</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(verifySize);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; verifySize; i++) &#123;<br>            verifyCode.append(sources.charAt(rand.nextInt(codesLen - <span class="hljs-number">1</span>)));<br>        &#125;<br>        <span class="hljs-keyword">return</span> verifyCode.toString();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成随机验证码文件,并返回验证码值 (生成图片形式，用的较少)</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> w</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> h</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> outputFile</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> verifySize</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">outputVerifyImage</span><span class="hljs-params">(<span class="hljs-type">int</span> w, <span class="hljs-type">int</span> h, File outputFile, <span class="hljs-type">int</span> verifySize)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">verifyCode</span> <span class="hljs-operator">=</span> generateVerifyCode(verifySize);<br>        outputImage(w, h, outputFile, verifyCode);<br>        <span class="hljs-keyword">return</span> verifyCode;<br>    &#125;<br><br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成指定验证码图像文件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> w</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> h</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> outputFile</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">outputImage</span><span class="hljs-params">(<span class="hljs-type">int</span> w, <span class="hljs-type">int</span> h, File outputFile, String code)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-keyword">if</span> (outputFile == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-type">File</span> <span class="hljs-variable">dir</span> <span class="hljs-operator">=</span> outputFile.getParentFile();<br>        <span class="hljs-comment">//文件不存在</span><br>        <span class="hljs-keyword">if</span> (!dir.exists()) &#123;<br>            <span class="hljs-comment">//创建</span><br>            dir.mkdirs();<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            outputFile.createNewFile();<br>            <span class="hljs-type">FileOutputStream</span> <span class="hljs-variable">fos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(outputFile);<br>            outputImage(w, h, fos, code);<br>            fos.close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> e;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输出指定验证码图片流</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> w</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> h</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> os</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">outputImage</span><span class="hljs-params">(<span class="hljs-type">int</span> w, <span class="hljs-type">int</span> h, OutputStream os, String code)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">verifySize</span> <span class="hljs-operator">=</span> code.length();<br>        <span class="hljs-type">BufferedImage</span> <span class="hljs-variable">image</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedImage</span>(w, h, BufferedImage.TYPE_INT_RGB);<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">rand</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-type">Graphics2D</span> <span class="hljs-variable">g2</span> <span class="hljs-operator">=</span> image.createGraphics();<br>        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);<br><br>        <span class="hljs-comment">// 创建颜色集合，使用java.awt包下的类</span><br>        Color[] colors = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Color</span>[<span class="hljs-number">5</span>];<br>        Color[] colorSpaces = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Color</span>[]&#123;Color.WHITE, Color.CYAN,<br>                Color.GRAY, Color.LIGHT_GRAY, Color.MAGENTA, Color.ORANGE,<br>                Color.PINK, Color.YELLOW&#125;;<br>        <span class="hljs-type">float</span>[] fractions = <span class="hljs-keyword">new</span> <span class="hljs-title class_">float</span>[colors.length];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; colors.length; i++) &#123;<br>            colors[i] = colorSpaces[rand.nextInt(colorSpaces.length)];<br>            fractions[i] = rand.nextFloat();<br>        &#125;<br>        Arrays.sort(fractions);<br>        <span class="hljs-comment">// 设置边框色</span><br>        g2.setColor(Color.GRAY);<br>        g2.fillRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, w, h);<br><br>        <span class="hljs-type">Color</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> getRandColor(<span class="hljs-number">200</span>, <span class="hljs-number">250</span>);<br>        <span class="hljs-comment">// 设置背景色</span><br>        g2.setColor(c);<br>        g2.fillRect(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, w, h - <span class="hljs-number">4</span>);<br><br>        <span class="hljs-comment">// 绘制干扰线</span><br>        <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-comment">// 设置线条的颜色</span><br>        g2.setColor(getRandColor(<span class="hljs-number">160</span>, <span class="hljs-number">200</span>));<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">20</span>; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> random.nextInt(w - <span class="hljs-number">1</span>);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> random.nextInt(h - <span class="hljs-number">1</span>);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">xl</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">6</span>) + <span class="hljs-number">1</span>;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">yl</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">12</span>) + <span class="hljs-number">1</span>;<br>            g2.drawLine(x, y, x + xl + <span class="hljs-number">40</span>, y + yl + <span class="hljs-number">20</span>);<br>        &#125;<br><br>        <span class="hljs-comment">// 添加噪点</span><br>        <span class="hljs-comment">// 噪声率</span><br>        <span class="hljs-type">float</span> <span class="hljs-variable">yawpRate</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.05f</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">area</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (yawpRate * w * h);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; area; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> random.nextInt(w);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> random.nextInt(h);<br>            <span class="hljs-comment">// 获取随机颜色</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">rgb</span> <span class="hljs-operator">=</span> getRandomIntColor();<br>            image.setRGB(x, y, rgb);<br>        &#125;<br>        <span class="hljs-comment">// 添加图片扭曲</span><br>        shear(g2, w, h, c);<br><br>        g2.setColor(getRandColor(<span class="hljs-number">100</span>, <span class="hljs-number">160</span>));<br>        <span class="hljs-type">int</span> <span class="hljs-variable">fontSize</span> <span class="hljs-operator">=</span> h - <span class="hljs-number">4</span>;<br>        <span class="hljs-type">Font</span> <span class="hljs-variable">font</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Font</span>(<span class="hljs-string">&quot;Algerian&quot;</span>, Font.ITALIC, fontSize);<br>        g2.setFont(font);<br>        <span class="hljs-type">char</span>[] chars = code.toCharArray();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; verifySize; i++) &#123;<br>            <span class="hljs-type">AffineTransform</span> <span class="hljs-variable">affine</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AffineTransform</span>();<br>            affine.setToRotation(Math.PI / <span class="hljs-number">4</span> * rand.nextDouble() * (rand.nextBoolean() ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>), (w / verifySize) * i + fontSize / <span class="hljs-number">2</span>, h / <span class="hljs-number">2</span>);<br>            g2.setTransform(affine);<br>            g2.drawChars(chars, i, <span class="hljs-number">1</span>, ((w - <span class="hljs-number">10</span>) / verifySize) * i + <span class="hljs-number">5</span>, h / <span class="hljs-number">2</span> + fontSize / <span class="hljs-number">2</span> - <span class="hljs-number">10</span>);<br>        &#125;<br><br>        g2.dispose();<br>        ImageIO.write(image, <span class="hljs-string">&quot;jpg&quot;</span>, os);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 随机颜色</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> fc</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> bc</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Color <span class="hljs-title function_">getRandColor</span><span class="hljs-params">(<span class="hljs-type">int</span> fc, <span class="hljs-type">int</span> bc)</span> &#123;<br>        <span class="hljs-keyword">if</span> (fc &gt; <span class="hljs-number">255</span>) &#123;<br>            fc = <span class="hljs-number">255</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (bc &gt; <span class="hljs-number">255</span>) &#123;<br>            bc = <span class="hljs-number">255</span>;<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> fc + random.nextInt(bc - fc);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">g</span> <span class="hljs-operator">=</span> fc + random.nextInt(bc - fc);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> fc + random.nextInt(bc - fc);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Color</span>(r, g, b);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getRandomIntColor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">int</span>[] rgb = getRandomRgb();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">color</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> c : rgb) &#123;<br>            color = color &lt;&lt; <span class="hljs-number">8</span>;<br>            color = color | c;<br>        &#125;<br>        <span class="hljs-keyword">return</span> color;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[] getRandomRgb() &#123;<br>        <span class="hljs-type">int</span>[] rgb = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">3</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;<br>            rgb[i] = random.nextInt(<span class="hljs-number">255</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> rgb;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">shear</span><span class="hljs-params">(Graphics g, <span class="hljs-type">int</span> w1, <span class="hljs-type">int</span> h1, Color color)</span> &#123;<br>        shearX(g, w1, h1, color);<br>        shearY(g, w1, h1, color);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">shearX</span><span class="hljs-params">(Graphics g, <span class="hljs-type">int</span> w1, <span class="hljs-type">int</span> h1, Color color)</span> &#123;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">period</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">2</span>);<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">borderGap</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">frames</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">phase</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">2</span>);<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; h1; i++) &#123;<br>            <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> (<span class="hljs-type">double</span>) (period &gt;&gt; <span class="hljs-number">1</span>)<br>                    * Math.sin((<span class="hljs-type">double</span>) i / (<span class="hljs-type">double</span>) period<br>                    + (<span class="hljs-number">6.2831853071795862D</span> * (<span class="hljs-type">double</span>) phase)<br>                    / (<span class="hljs-type">double</span>) frames);<br>            g.copyArea(<span class="hljs-number">0</span>, i, w1, <span class="hljs-number">1</span>, (<span class="hljs-type">int</span>) d, <span class="hljs-number">0</span>);<br>            <span class="hljs-keyword">if</span> (borderGap) &#123;<br>                g.setColor(color);<br>                g.drawLine((<span class="hljs-type">int</span>) d, i, <span class="hljs-number">0</span>, i);<br>                g.drawLine((<span class="hljs-type">int</span>) d + w1, i, w1, i);<br>            &#125;<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">shearY</span><span class="hljs-params">(Graphics g, <span class="hljs-type">int</span> w1, <span class="hljs-type">int</span> h1, Color color)</span> &#123;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">period</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">40</span>) + <span class="hljs-number">10</span>; <span class="hljs-comment">// 50;</span><br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">borderGap</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">frames</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">phase</span> <span class="hljs-operator">=</span> <span class="hljs-number">7</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; w1; i++) &#123;<br>            <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> (<span class="hljs-type">double</span>) (period &gt;&gt; <span class="hljs-number">1</span>)<br>                    * Math.sin((<span class="hljs-type">double</span>) i / (<span class="hljs-type">double</span>) period<br>                    + (<span class="hljs-number">6.2831853071795862D</span> * (<span class="hljs-type">double</span>) phase)<br>                    / (<span class="hljs-type">double</span>) frames);<br>            g.copyArea(i, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, h1, <span class="hljs-number">0</span>, (<span class="hljs-type">int</span>) d);<br>            <span class="hljs-keyword">if</span> (borderGap) &#123;<br>                g.setColor(color);<br>                g.drawLine(i, (<span class="hljs-type">int</span>) d, i, <span class="hljs-number">0</span>);<br>                g.drawLine(i, (<span class="hljs-type">int</span>) d + h1, i, h1);<br>            &#125;<br><br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>CheckCodeServlet类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(&quot;/checkCodeServlet&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CheckCodeServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br><br>        <span class="hljs-comment">//0.获取session对象【提前使用request获取session对象 不要在响应之后再去使用request对象】</span><br>        <span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> request.getSession();<br><br>        <span class="hljs-comment">//1.通过工具类 生成验证码图片   使用response将验证码图片写给客户端浏览器展示</span><br>        <span class="hljs-type">ServletOutputStream</span> <span class="hljs-variable">os</span> <span class="hljs-operator">=</span> response.getOutputStream();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">verifyCode</span> <span class="hljs-operator">=</span> CheckCodeUtil.outputVerifyImage(<span class="hljs-number">100</span>, <span class="hljs-number">50</span>, os, <span class="hljs-number">4</span>);<br>        System.out.println(<span class="hljs-string">&quot;后台生成的验证码：verifyCode = &quot;</span> + verifyCode);<br><br>        <span class="hljs-comment">//2.将生成的验证码保存在Session域对象中</span><br>        session.setAttribute(<span class="hljs-string">&quot;verityCode&quot;</span>, verifyCode);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>登录-LoginServlet</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">* 登陆实现步骤：</span><br><span class="hljs-comment">*   0.处理请求响应中文乱码</span><br><span class="hljs-comment">*   1.获取请求参数【用户名和密码】</span><br><span class="hljs-comment">*   2.根据用户名和密码使用MyBatis查询数据库哭tb_user表 返回user对象</span><br><span class="hljs-comment">*   3.判断loginUser随想是否为null</span><br><span class="hljs-comment">*   3.1：loginUser==null：登录失败</span><br><span class="hljs-comment">*   3.2：loginUser!=null：登录成功</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/login&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span><span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//0.处理请求响应中文乱码</span><br>            request.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>            response.setContentType(<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span>);<br><br>            <span class="hljs-comment">//1.获取请求参数【用户名和密码】</span><br>            Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();<br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>            BeanUtils.populate(user, parameterMap);<br><br>            <span class="hljs-comment">/*==================使用验证码登录开始==========================*/</span><br>            <span class="hljs-comment">//1.获取用户输入的验证码</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">checkCode</span> <span class="hljs-operator">=</span> parameterMap.get(<span class="hljs-string">&quot;checkCode&quot;</span>)[<span class="hljs-number">0</span>];<br><br>            <span class="hljs-comment">//2.和后台生成的验证码进行比对</span><br>            <span class="hljs-comment">//2.1：获取后台生成的验证码</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">verityCode</span> <span class="hljs-operator">=</span> (String) request.getSession().getAttribute(<span class="hljs-string">&quot;verityCode&quot;</span>);<br><br>            <span class="hljs-comment">//用户输入的验证码为空 或者 用户输入的验证码和后台生成的验证码不一致</span><br>            <span class="hljs-keyword">if</span> (checkCode == <span class="hljs-literal">null</span> || !checkCode.equalsIgnoreCase(verityCode)) &#123;<br>                <span class="hljs-comment">//3.1：不一致：响应用户&quot;验证码输入有误！&quot;</span><br>                response.getWriter().print(<span class="hljs-string">&quot;验证码输入有误！&quot;</span>);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">//3.2：一致：进行登录功能处理【省略】</span><br>            <span class="hljs-comment">/*==================使用验证码登录开始==========================*/</span><br><br>            <span class="hljs-comment">//2.根据用户名和密码使用MyBatis查询数据库哭tb_user表 返回user对象</span><br>            <span class="hljs-comment">//2.1：加载MyBatis配置文件</span><br>            <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;mybatis-config.xml&quot;</span>);<br><br>            <span class="hljs-comment">//2.2：获取SqlSessionFactory对象</span><br>            <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(is);<br><br>            <span class="hljs-comment">//2.3：获取SqlSession对象</span><br>            sqlSession = sqlSessionFactory.openSession();<br><br>            <span class="hljs-comment">//2.4：获取dao接口代理对象</span><br>            <span class="hljs-type">UserDao</span> <span class="hljs-variable">userDao</span> <span class="hljs-operator">=</span> sqlSession.getMapper(UserDao.class);<br><br>            <span class="hljs-comment">//2.5：调用方法</span><br>            <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userDao.select(user);<br><br>            <span class="hljs-comment">//3.判断loginUser随想是否为null</span><br>            <span class="hljs-keyword">if</span> (loginUser==<span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-comment">//3.1：loginUser==null：登录失败</span><br>                response.getWriter().print(<span class="hljs-string">&quot;登录失败！&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">//3.2：loginUser!=null：登录成功</span><br>                response.getWriter().print(<span class="hljs-string">&quot;登录成功！&quot;</span>);<br>            &#125;<br><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>            response.getWriter().print(<span class="hljs-string">&quot;服务器异常！&quot;</span>);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-comment">//2.6：关闭SqlSession对象</span><br>            <span class="hljs-keyword">if</span> (sqlSession!=<span class="hljs-literal">null</span>) &#123;<br>                sqlSession.close();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>注册-registerServlet</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">* 注册实现步骤：</span><br><span class="hljs-comment">*   0.处理请求响应中文乱码</span><br><span class="hljs-comment">*   1.获取注册的用户信息</span><br><span class="hljs-comment">*   2.根据用户名查询数据库 返回user对象 判断用户名是否存在【使用mybatis】</span><br><span class="hljs-comment">*   3.1：user1==null：用户名不存在，执行注册操作</span><br><span class="hljs-comment">*   3.2：user1!=null：用户名已存在  进行提示</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@WebServlet(&quot;/register&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">registerServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span><span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//0.处理请求响应中文乱码</span><br>            request.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>            response.setContentType(<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span>);<br><br>            <span class="hljs-comment">//1.获取注册的用户信息</span><br>            Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();<br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>            BeanUtils.populate(user, parameterMap);<br><br>            <span class="hljs-comment">//2.根据用户名查询数据库 返回user对象 判断用户名是否存在</span><br>            <span class="hljs-comment">//2.1：加载MyBatis配置文件</span><br>            <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;mybatis-config.xml&quot;</span>);<br><br>            <span class="hljs-comment">//2.2：获取SqlSessionFactory对象</span><br>            <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(is);<br><br>            <span class="hljs-comment">//2.3：获取SqlSession对象</span><br>            sqlSession = sqlSessionFactory.openSession();<br><br>            <span class="hljs-comment">//2.4：获取dao接口代理对象</span><br>            <span class="hljs-type">UserDao</span> <span class="hljs-variable">userDao</span> <span class="hljs-operator">=</span> sqlSession.getMapper(UserDao.class);<br><br>            <span class="hljs-comment">//2.5：调用方法</span><br>            <span class="hljs-type">User</span> <span class="hljs-variable">user1</span> <span class="hljs-operator">=</span> userDao.selectByUsername(user.getUsername());<br><br>            <span class="hljs-comment">//3.1：user1==null：用户名不存在，执行注册操作</span><br>            <span class="hljs-keyword">if</span> (user1 == <span class="hljs-literal">null</span>) &#123;<br>                userDao.add(user);<br>                <span class="hljs-comment">//手动提交事务</span><br>                sqlSession.commit();<br>                response.getWriter().print(<span class="hljs-string">&quot;用户注册成功！&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">//3.2：user1!=null：用户名已存在  进行提示</span><br>                response.getWriter().print(<span class="hljs-string">&quot;用户名已存在！&quot;</span>);<br>            &#125;<br><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-comment">//新增失败 回滚</span><br>            sqlSession.rollback();<br><br>            e.printStackTrace();<br>            response.getWriter().print(<span class="hljs-string">&quot;服务器异常！&quot;</span>);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-comment">//2.6：关闭SqlSession对象</span><br>            <span class="hljs-keyword">if</span> (sqlSession!=<span class="hljs-literal">null</span>) &#123;<br>                sqlSession.close();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doPost(request, response);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/22/%E6%B3%A8%E8%A7%A3sql/"/>
    <url>/2022/08/22/%E6%B3%A8%E8%A7%A3sql/</url>
    
    <content type="html"><![CDATA[<h1 id="注解sql"><a href="#注解sql" class="headerlink" title="注解sql"></a>注解sql</h1><hr><p>BrandDao接口配置</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs elixir">public interface <span class="hljs-title class_">BrandDao</span> &#123;<br><br>    /*<br>    注意：映射文件的引入最好使用包批量扫描引入<br>&lt;mappers&gt;<br>&lt;!--方式二：扫描接口-批量引入--&gt;<br>&lt;package name=<span class="hljs-string">&quot;com.itheima.dao&quot;</span>/&gt;<br>&lt;/mappers&gt;<br>    增加：<span class="hljs-variable">@Insert</span>(<span class="hljs-string">&quot;增加SQL&quot;</span>)<br>删除：<span class="hljs-variable">@Delete</span>(<span class="hljs-string">&quot;删除SQL&quot;</span>)<br>修改：<span class="hljs-variable">@Update</span>(<span class="hljs-string">&quot;修改SQL&quot;</span>)<br>查询：<span class="hljs-variable">@Select</span>(<span class="hljs-string">&quot;查询SQL&quot;</span>)<br>增加记录 返回主键：<span class="hljs-variable">@SelectKey</span>(resultType=<span class="hljs-string">&quot;&quot;</span>,keyProperty=<span class="hljs-string">&quot;&quot;</span>,before=<span class="hljs-literal">true</span>|<span class="hljs-literal">false</span>,statement=&#123;<span class="hljs-string">&quot;select last_insert_id()&quot;</span>&#125;);<br><br>实际开发中：<span class="hljs-title class_">MyBatis</span>基本上不使用注解开发，除非一些小公司<br>原因：<br><span class="hljs-number">1</span>.简单操作使用注解，复杂操作要使用xml配置<br><span class="hljs-number">2</span>.使用注解存在硬编码问题<br><span class="hljs-number">3</span>.后面我们会学习<span class="hljs-title class_">MyBatis</span>-plus  可以进行代码自动生成<br>会生成 javabean、dao接口、dao接口映射文件、service接口、service实现类<br>复杂关系实现注解说明：<br><span class="hljs-variable">@ResultMap</span>：用于根据resultMap标签的id引用配置好的resultMap<br>    */<br><br>    /**<br>     * 查询所有品牌信息<br>     * <span class="hljs-variable">@return</span><br>     */<br>    <span class="hljs-variable">@ResultMap</span>(<span class="hljs-string">&quot;brandMap&quot;</span>)<br>    <span class="hljs-variable">@Select</span>(<span class="hljs-string">&quot;select * from tb_brand&quot;</span>)<br>    <span class="hljs-title class_">List</span>&lt;<span class="hljs-title class_">Brand</span>&gt; selectAll();<br><br>    /**<br>     * 查看品牌详情<br>     * <span class="hljs-variable">@param</span> id 品牌id<br>     * <span class="hljs-variable">@return</span> 品牌对象<br>     */<br>    <span class="hljs-variable">@ResultMap</span>(<span class="hljs-string">&quot;brandMap&quot;</span>)<br>    <span class="hljs-variable">@Select</span>(<span class="hljs-string">&quot;select * from tb_brand where id=<span class="hljs-subst">#&#123;id&#125;</span>&quot;</span>)<br>    <span class="hljs-title class_">Brand</span> selectById(int id);<br><br>    /**<br>     * 添加品牌<br>     * <span class="hljs-variable">@param</span> brand 封装要添加的品牌信息<br>     * <span class="hljs-variable">@return</span> 受影响的行数<br>     */<br>    <span class="hljs-variable">@Insert</span>(<span class="hljs-string">&quot;insert into tb_brand values(null,<span class="hljs-subst">#&#123;brandName&#125;</span>,<span class="hljs-subst">#&#123;companyName&#125;</span>,<span class="hljs-subst">#&#123;ordered&#125;</span>,<span class="hljs-subst">#&#123;description&#125;</span>,<span class="hljs-subst">#&#123;status&#125;</span>)\n&quot;</span>)<br>    int add(<span class="hljs-title class_">Brand</span> brand);<br><br>    /**<br>     * 添加品牌 获取添加记录的主键<br>     * <span class="hljs-variable">@param</span> brand 封装要添加的品牌信息<br>     * <span class="hljs-variable">@return</span> 受影响的行数<br>     */<br>    /*<br>         <span class="hljs-variable">@SelectKey</span>：获取插入数据的主键<br>            keyProperty：主键列对应的属性<br>            resultType：主键列对应的属性类型<br>            before：主键的生成在插入语句之前设置为ture，在插入语句之后生成主键设置为<span class="hljs-literal">false</span><br>            statement：获取主键的sql语句<br>    */<br>    <span class="hljs-variable">@SelectKey</span>(keyProperty = <span class="hljs-string">&quot;id&quot;</span>,resultType = int.class,before = <span class="hljs-literal">false</span>,statement = <span class="hljs-string">&quot;select last_insert_id()&quot;</span>)<br>    <span class="hljs-variable">@Insert</span>(<span class="hljs-string">&quot;insert into tb_brand values(null,<span class="hljs-subst">#&#123;brandName&#125;</span>,<span class="hljs-subst">#&#123;companyName&#125;</span>,<span class="hljs-subst">#&#123;ordered&#125;</span>,<span class="hljs-subst">#&#123;description&#125;</span>,<span class="hljs-subst">#&#123;status&#125;</span>)\n&quot;</span>)<br>    int addGetId(<span class="hljs-title class_">Brand</span> brand);<br>    <br>    /**<br>     * 修改品牌的全部信息<br>     * <span class="hljs-variable">@param</span> brand 要修改的品牌信息<br>     * <span class="hljs-variable">@return</span> 受影响的行数<br>     */<br>    <span class="hljs-variable">@Update</span>(<span class="hljs-string">&quot;update tb_brand set\n&quot;</span> +<br>            <span class="hljs-string">&quot;            brand_name=<span class="hljs-subst">#&#123;brandName&#125;</span>,\n&quot;</span> +<br>            <span class="hljs-string">&quot;            company_name=<span class="hljs-subst">#&#123;companyName&#125;</span>,\n&quot;</span> +<br>            <span class="hljs-string">&quot;            ordered=<span class="hljs-subst">#&#123;ordered&#125;</span>,\n&quot;</span> +<br>            <span class="hljs-string">&quot;            description=<span class="hljs-subst">#&#123;description&#125;</span>,\n&quot;</span> +<br>            <span class="hljs-string">&quot;            status=<span class="hljs-subst">#&#123;status&#125;</span>\n&quot;</span> +<br>            <span class="hljs-string">&quot;            where id=<span class="hljs-subst">#&#123;id&#125;</span>&quot;</span>)<br>    int update(<span class="hljs-title class_">Brand</span> brand);<br><br>    /**<br>     * 根据id删除指定的品牌信息记录<br>     * <span class="hljs-variable">@param</span> id 品牌的id<br>     * <span class="hljs-variable">@return</span> 受影响的行数<br>     */<br>    <span class="hljs-variable">@Delete</span>(<span class="hljs-string">&quot;delete from tb_brand where id=<span class="hljs-subst">#&#123;id&#125;</span>&quot;</span>)<br>    int deleteById(int id);<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/22/%E6%99%AE%E9%80%9Asql/"/>
    <url>/2022/08/22/%E6%99%AE%E9%80%9Asql/</url>
    
    <content type="html"><![CDATA[<h1 id="普通sql"><a href="#普通sql" class="headerlink" title="普通sql"></a>普通sql</h1><hr><p>BrandDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BrandDao</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询所有品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">SelectAll</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查看品牌详情</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 品牌id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 品牌对象</span><br><span class="hljs-comment">     */</span><br>    Brand <span class="hljs-title function_">selectById</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加品牌</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装要添加的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加品牌数据到数据库 添加完成之后获取到品牌的id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装要添加的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">addGetId</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加品牌数据到数据库 添加完成之后获取到品牌的id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装要添加的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">addGetId2</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改品牌的全部信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 要修改的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据id删除指定的品牌信息记录</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 品牌的id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">deleteById</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据品牌名称模糊查询品牌列表</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brandName 品牌名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 品牌信息列表集合</span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByConditional1</span><span class="hljs-params">(String brandName)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据品牌名称模糊查询品牌列表</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brandName 品牌名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 品牌信息列表集合</span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByConditional2</span><span class="hljs-params">(String brandName)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> status 当前状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brandName 品牌名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> companyName 企业名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByCondition3</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;status&quot;)</span> <span class="hljs-type">int</span> status, <span class="hljs-meta">@Param(&quot;brandName&quot;)</span> String brandName, <span class="hljs-meta">@Param(&quot;companyName&quot;)</span> String companyName)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByCondition4</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> map 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByCondition5</span><span class="hljs-params">(Map&lt;String,Object&gt; map)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 需求：要求根据品牌的状态status查询所有的品牌信息 根据ordered字段进行排序</span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt; <span class="hljs-title function_">selectByCondition6</span><span class="hljs-params">(QueryVo queryVo)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>BrandDao.xml配置</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.itz.dao.BrandDao&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 1.查询所有品牌信息   --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        存在问题：品牌信息查询出来封装到Brand对象中显示时，品牌名称brandName和企业名称companyName两个属性数据显示为null</span></span><br><span class="hljs-comment"><span class="language-xml">        原因：</span></span><br><span class="hljs-comment"><span class="language-xml">            MyBatis可以自动的将数据库表中字段数据封装到对象属性中，但是这个时候要求表中字段和对象属性名称要一致</span></span><br><span class="hljs-comment"><span class="language-xml">            这里：tb_brand表中品牌名称字段为brand_name、企业名称字段为company_name 和Brand类品牌名称属性brandName、企业名称companyName对不上</span></span><br><span class="hljs-comment"><span class="language-xml">            就导致了无法将数据库中查询出的品牌名称数据和企业名称数据填充到Brand对象的品牌名称属性brandName、企业名称属性companyName上面 所以出现为null</span></span><br><span class="hljs-comment"><span class="language-xml">        解决：</span></span><br><span class="hljs-comment"><span class="language-xml">            方式一：</span></span><br><span class="hljs-comment"><span class="language-xml">            1.手动配置表中字段和类中属性的映射，使用ResultMap标签</span></span><br><span class="hljs-comment"><span class="language-xml">                resultMap标签：用于手动配置表中和类中属性映射。解决由于字段名和属性名不一致导致无法自动填充的问题。</span></span><br><span class="hljs-comment"><span class="language-xml">              使用：</span></span><br><span class="hljs-comment"><span class="language-xml">                  1.编写一个resultMap标签</span></span><br><span class="hljs-comment"><span class="language-xml">                  2.在resultMap标签中使用子标签id或result进行配置列名和属性的映射</span></span><br><span class="hljs-comment"><span class="language-xml">                  3.在select标签中根据resultMap标签id引用我们自定义的resultMap标签</span></span><br><span class="hljs-comment"><span class="language-xml">              resultMap标签：</span></span><br><span class="hljs-comment"><span class="language-xml">                id属性：唯一标识 名称可以随便起</span></span><br><span class="hljs-comment"><span class="language-xml">                type属性：你这里要配置的是数据库哪张表和哪个Java类的字段属性映射 这里写java类的类型</span></span><br><span class="hljs-comment"><span class="language-xml">                id子标签：用于配置主键列名和属性名的映射</span></span><br><span class="hljs-comment"><span class="language-xml">                    column属性：数据库表中列名</span></span><br><span class="hljs-comment"><span class="language-xml">                    property属性：java类属性名</span></span><br><span class="hljs-comment"><span class="language-xml">                result标签：用于配置普通列名和属性名的映射</span></span><br><span class="hljs-comment"><span class="language-xml">                    column属性：数据库表中列名</span></span><br><span class="hljs-comment"><span class="language-xml">                    property属性：java类属性名</span></span><br><span class="hljs-comment"><span class="language-xml">         注意：在select标签中 resultType和resultMap的使用只能二选一，不要同时存在</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">       方式二：使用别名 直接对你的查询字段[列]起一个别名和属性名称相同即可</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">       方式二对于后期的复杂的多表查询 用起来不是很合适</span></span><br><span class="hljs-comment"><span class="language-xml">       实际开发中，使用方式一会更多些  当然对于你想使用哪一种随你</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 方式二： --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--&lt;select id=&quot;SelectAll&quot; resultType=&quot;Brand&quot;&gt;</span></span><br><span class="hljs-comment"><span class="language-xml">        select id,brand_name AS brandName,company_name AS companyName,ordered,description,status from tb_brand</span></span><br><span class="hljs-comment"><span class="language-xml">    &lt;/select&gt;--&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 方式一：使用resultMap 解决列名和java类属性不一致 数据无法自动填充问题--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;Brand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;brand_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;brandName&quot;</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;company_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;companyName&quot;</span> /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;SelectAll&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--查看详情信息--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        select标签：查询</span></span><br><span class="hljs-comment"><span class="language-xml">            id属性：接口方法名称</span></span><br><span class="hljs-comment"><span class="language-xml">            resultType：接口方法返回值类型</span></span><br><span class="hljs-comment"><span class="language-xml">                情况1：方法返回泛型集合 就写集合的泛型类型</span></span><br><span class="hljs-comment"><span class="language-xml">                情况2：方法返回对象    就直接写对象的类型</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">                注意：如果是查询，则resultType属性不能省略，当然你写了resultMap属性之后，可以不用写resultType属性</span></span><br><span class="hljs-comment"><span class="language-xml">            parameterType：接口方法形参类型</span></span><br><span class="hljs-comment"><span class="language-xml">                情况1：如果传入的是简单类型（基本类型+String）类型   parameterType属性值就直接写int、long、String</span></span><br><span class="hljs-comment"><span class="language-xml">                        获取参数值：#</span></span><span class="hljs-template-variable">&#123;任意字段名称&#125;</span><span class="language-xml"><span class="hljs-comment">     一般我们会写和方法形参名称保持一致</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">                注意：参数类型parameterType属性可以省略，不进行设置【MyBatis会自动识别参数类型 进行参数绑定】，一般如果我们明确知道类型，也不进行省略</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectById&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;int&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand where id = #</span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--添加品牌--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        insert标签：添加</span></span><br><span class="hljs-comment"><span class="language-xml">            id属性：接口方法名</span></span><br><span class="hljs-comment"><span class="language-xml">            resultType属性：在增删改中 返回的是受影响行数 int类型  不需要设置 resultType属性省略不设置</span></span><br><span class="hljs-comment"><span class="language-xml">            parameterType属性：接口方法参数类型</span></span><br><span class="hljs-comment"><span class="language-xml">                情况2：如果传入的是一个对象参数    则直接写对象的类型即可</span></span><br><span class="hljs-comment"><span class="language-xml">                    获取参数：#</span></span><span class="hljs-template-variable">&#123;对象属性名称&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">            注意：</span></span><br><span class="hljs-comment"><span class="language-xml">                1.增删改操作：对应的insert、update、delete标签不需要设置resultType属性  默认返回受影响的行数 int类型</span></span><br><span class="hljs-comment"><span class="language-xml">                2.增删改操作：MyBatis采用JDBC事务管理   默认关闭了事务的自动提交 需要手动提交事务</span></span><br><span class="hljs-comment"><span class="language-xml">                3.增删改操作：不要使用错标签 增加用insert标签 删除就用delete标签 修改就用update标签</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span></span><br><span class="language-xml">        insert into tb_brand values(null, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml">)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--添加品牌数据到数据库 添加完成之后获取到品牌的id--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        主键返回方式一：</span></span><br><span class="hljs-comment"><span class="language-xml">            在insert标签上设置 useGeneratedKeys属性和keyProperty属性</span></span><br><span class="hljs-comment"><span class="language-xml">            useGeneratedKeys属性：使用MySQL数据库主键自增</span></span><br><span class="hljs-comment"><span class="language-xml">            keyProperty属性：通过数据库主键自增生成的id    填充到对应的那个属性上</span></span><br><span class="hljs-comment"><span class="language-xml">            注意：只有数据库采用的是主键自增 才可以这样使用</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addGetId&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span> <span class="hljs-attr">useGeneratedKeys</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">keyProperty</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span></span><br><span class="language-xml">        insert into tb_brand values(null, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml">)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        添加-主键返回方式二：</span></span><br><span class="hljs-comment"><span class="language-xml">            selectKey标签： 查询添加到数据库中的记录的主键数据</span></span><br><span class="hljs-comment"><span class="language-xml">                keyProperty属性：主键列查询出来填充到对象的哪个属性上    主键列对应的属性名称</span></span><br><span class="hljs-comment"><span class="language-xml">                resultType属性：主键列对应的属性类型</span></span><br><span class="hljs-comment"><span class="language-xml">                order属性：主键的生成和插入SQL语句的顺序</span></span><br><span class="hljs-comment"><span class="language-xml">                    eg：情况1：id自增 先插入数据 然后生成主键  所以这样就设置为AFTER</span></span><br><span class="hljs-comment"><span class="language-xml">                        情况2：比如使用uuid作为主键  这时uuid就需要提前生成 然后再和数据一起插入到数据库表中  这样就设置为BEFORE</span></span><br><span class="hljs-comment"><span class="language-xml">            selectKey标签体：写查询主键的SQL语句</span></span><br><span class="hljs-comment"><span class="language-xml">                  自增：select last_insert_id()    ：查询上一次插入记录自增的id</span></span><br><span class="hljs-comment"><span class="language-xml">                  uuid：select uuid()             ：查询当前插入这条记录的UUID</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">       实际开发：</span></span><br><span class="hljs-comment"><span class="language-xml">              一流项目：使用雪花算法</span></span><br><span class="hljs-comment"><span class="language-xml">              二流项目：使用uuid</span></span><br><span class="hljs-comment"><span class="language-xml">              三流项目：使用主键自增</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addGetId2&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">selectKey</span> <span class="hljs-attr">keyProperty</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;int&quot;</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;AFTER&quot;</span>&gt;</span></span><br><span class="language-xml">            select last_insert_id()</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">selectKey</span>&gt;</span></span><br><span class="language-xml">        insert into tb_brand values(null, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">, #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml">)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--修改品牌记录的所有字段--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        update tb_brand set</span><br><span class="language-xml">            brand_name=#</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            company_name=#</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            ordered=#</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            description=#</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            status=#</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">            where id=#</span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--根据id删除单个品牌信息记录--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">delete</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deleteById&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;int&quot;</span>&gt;</span></span><br><span class="language-xml">        delete from tb_brand where id=#</span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">delete</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--根据品牌名称模糊查询品牌列表--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByConditional1&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;string&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--select * from tb_brand where brand_name like &#x27;%#</span></span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml"><span class="hljs-comment">%&#x27;--&gt;</span></span><br><span class="language-xml">        select * from tb_brand where brand_name like &#x27;%$</span><span class="hljs-template-variable">&#123;value&#125;</span><span class="language-xml">%&#x27;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--根据品牌名称模糊查询品牌列表--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        MyBatis中获取参数的方式有两种：</span></span><br><span class="hljs-comment"><span class="language-xml">            $</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">:表示拼接字符串 不会进行数据类型转换  容易产生SQL注意问题</span></span><br><span class="hljs-comment"><span class="language-xml">            #</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">:表示占位符？  会进行数据类型自动转换 不会产生SQL注入问题</span></span><br><span class="hljs-comment"><span class="language-xml">            注意：</span></span><br><span class="hljs-comment"><span class="language-xml">                使用$</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">获取单个简单类型参数：必须写$</span></span><span class="hljs-template-variable">&#123;value&#125;</span><span class="language-xml"><span class="hljs-comment">     获取对象类型参数：$</span></span><span class="hljs-template-variable">&#123;对象属性名称&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">                使用#</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">获取单个简单类型参数：必须写#</span></span><span class="hljs-template-variable">&#123;任意字段&#125;</span><span class="language-xml"><span class="hljs-comment">   获取对象类型参数：#</span></span><span class="hljs-template-variable">&#123;对象属性名称&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">            使用场景：</span></span><br><span class="hljs-comment"><span class="language-xml">                #</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">: 一般正常的传递参数 都使用#</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">                $</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">: 一般传递表名、列名、排序字段使用$</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">                    因为传递表名tb_brand 使用$</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">传递SQL语句中就直接显示 tb_brand；如果使用#</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">传递 则会这样显示&#x27;tb_brand&#x27;</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByConditional2&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;string&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--select * from tb_brand where brand_name like &#x27;%#</span></span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml"><span class="hljs-comment">%&#x27;--&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--concat(&#x27;%&#x27;,#</span></span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml"><span class="hljs-comment">,&#x27;%&#x27;):MySQl内置的字符串拼接函数  用于将多个字符串拼接成一个新的字符串  ==》&#x27;%?%&#x27; ==&gt; &#x27;%百度%&#x27; --&gt;</span></span><br><span class="language-xml">        select * from tb_brand where brand_name like concat(&#x27;%&#x27;,#</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">,&#x27;%&#x27;)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--多条件查询品牌信息列表--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        问题：多个参数不能直接传递，如果直接传递会报错</span></span><br><span class="hljs-comment"><span class="language-xml">        解决：</span></span><br><span class="hljs-comment"><span class="language-xml">            方式一：直接在dao接口方法形参前打上@Param(&quot;参数名称&quot;)注解  获取时#</span></span><span class="hljs-template-variable">&#123;参数名称&#125;</span><span class="language-xml"><span class="hljs-comment">  #</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">中的参数名称要和@Param注解中参数名称保持一致  【最简单】</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">            方式二：将多个参数封装到对象中 获取：#</span></span><span class="hljs-template-variable">&#123;对象属性名称&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">            方式三：将多个参数封装到一个map集合中    获取：#</span></span><span class="hljs-template-variable">&#123;map的key&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--多参数传递方式一：使用@Param注解--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition3&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand</span><br><span class="language-xml">            where status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">            and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">            and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--多参数传递方式二：使用对象封装多个参数--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition4&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand</span><br><span class="language-xml">          where status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">          and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">          and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--多参数传递方式二：使用map集合封装多个参数--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition5&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand</span><br><span class="language-xml">          where status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">          and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">          and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--使用包装类QueryVo封装所有的参数--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition6&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;queryVo&quot;</span>&gt;</span></span><br><span class="language-xml">        select *</span><br><span class="language-xml">        from tb_brand</span><br><span class="language-xml">        where status = #</span><span class="hljs-template-variable">&#123;brand.status&#125;</span><span class="language-xml"></span><br><span class="language-xml">        order by $</span><span class="hljs-template-variable">&#123;orderField&#125;</span><span class="language-xml"> desc</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/22/%E5%8A%A8%E6%80%81sql/"/>
    <url>/2022/08/22/%E5%8A%A8%E6%80%81sql/</url>
    
    <content type="html"><![CDATA[<h1 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h1><hr><p>BrandMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BrandDao</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询 if</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt;  <span class="hljs-title function_">selectByCondition</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询 if + where 1=1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt;  <span class="hljs-title function_">selectByCondition1</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询 if + where</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt;  <span class="hljs-title function_">selectByCondition2</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件中选一个条件查询 choose + where</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt;  <span class="hljs-title function_">selectByCondition3</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 多条件查询 if + trim</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 封装查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    List&lt;Brand&gt;  <span class="hljs-title function_">selectByCondition4</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 动态修改品牌的信息 set+if</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 要修改的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 动态修改品牌的信息 trim+if</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> brand 要修改的品牌信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 受影响的行数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">update2</span><span class="hljs-params">(Brand brand)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 批量删除</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ids 要删除的id数组</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">deleteByIds</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;ids&quot;)</span> <span class="hljs-type">int</span>[] ids)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>BrandMapper.xml配置</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"> <span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.itz.dao.BrandDao&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--动态SQL标签sql</span></span><br><span class="hljs-comment"><span class="language-xml">        sql标签：用于抽取公共的sql片段 方便集中进行维护</span></span><br><span class="hljs-comment"><span class="language-xml">        include标签：用于在其他SQL语句中引入定义好的SQL片段</span></span><br><span class="hljs-comment"><span class="language-xml">            refId属性：执行sql标签的id属性值</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectBrand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!--select * from tb_brand--&gt;</span></span><br><span class="language-xml">        select id,brand_name,company_name from tb_brand</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 方式一：使用resultMap 解决列名和java类属性不一致 数据无法自动填充问题--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;Brand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;brand_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;brandName&quot;</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;company_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;companyName&quot;</span> /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--多参数传递方式二：使用对象封装多个参数--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        select * from tb_brand</span></span><br><span class="hljs-comment"><span class="language-xml">          where status = #</span></span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">          and brand_name like concat(&#x27;%&#x27;, #</span></span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml"><span class="hljs-comment">, &#x27;%&#x27;)</span></span><br><span class="hljs-comment"><span class="language-xml">          and company_name like concat(&#x27;%&#x27;, #</span></span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml"><span class="hljs-comment">, &#x27;%&#x27;)</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        if标签：用于判断 test属性值如果为ture 就会将if标签体中的sql片段拼接到sql语句中</span></span><br><span class="hljs-comment"><span class="language-xml">        注意：test属性中  1.获取参数不需要甲#</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment"> 2.并且或者使用 and和or</span></span><br><span class="hljs-comment"><span class="language-xml">        说明：brandName.length 获取这个字符串参数的长度 长度大于0。说明该字符串不是空符串&quot;&quot;</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand where</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--if + where 1=1--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition1&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand where 1=1</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">            and status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">            and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">            and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--if + where--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        where标签：用于设置where关键字 当where标签体中有条件成立 则会添加where关键字  没有 则不添加</span></span><br><span class="hljs-comment"><span class="language-xml">        注意：where会去除多余的关键字 eg：and｜or  但是不会自动添加</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition2&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        select * from tb_brand</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                    and status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--choose + where--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        choose标签：类似于java中switch判断 多选一</span></span><br><span class="hljs-comment"><span class="language-xml">            when：相当于case</span></span><br><span class="hljs-comment"><span class="language-xml">            otherwise：相当于default</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition3&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;selectBrand&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">choose</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                    status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">otherwise</span>&gt;</span></span><br><span class="language-xml">                    1=1</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">otherwise</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">choose</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--if+trim--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        trim标签：是用于替换where、set标签完成sql语句拼接的</span></span><br><span class="hljs-comment"><span class="language-xml">            prefix：设置前缀</span></span><br><span class="hljs-comment"><span class="language-xml">            prefixOverrides：去除sql片段前面多余的关键字</span></span><br><span class="hljs-comment"><span class="language-xml">            suffixOverrides：去除sql片段后面多余的关键字</span></span><br><span class="hljs-comment"><span class="language-xml">            suffix：设置后缀</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">            eg：select * from tb_brand where and status=1</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectByCondition4&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;brandMap&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;selectBrand&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">trim</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;where&quot;</span> <span class="hljs-attr">prefixOverrides</span>=<span class="hljs-string">&quot;and|or&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                and status = #</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                and brand_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                and company_name like concat(&#x27;%&#x27;, #</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">, &#x27;%&#x27;)</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">trim</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--动态修改品牌记录的字段信息--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--</span></span><br><span class="hljs-comment"><span class="language-xml">        update tb_brand set</span></span><br><span class="hljs-comment"><span class="language-xml">            brand_name=#</span></span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml"><span class="hljs-comment">,</span></span><br><span class="hljs-comment"><span class="language-xml">            company_name=#</span></span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml"><span class="hljs-comment">,</span></span><br><span class="hljs-comment"><span class="language-xml">            ordered=#</span></span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml"><span class="hljs-comment">,</span></span><br><span class="hljs-comment"><span class="language-xml">            description=#</span></span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml"><span class="hljs-comment">,</span></span><br><span class="hljs-comment"><span class="language-xml">            status=#</span></span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">        where id=#</span></span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--set+if</span></span><br><span class="hljs-comment"><span class="language-xml">        set标签：替换set关键字  会去除多余的,</span></span><br><span class="hljs-comment"><span class="language-xml"></span></span><br><span class="hljs-comment"><span class="language-xml">        eg:update tb_brand set brand_name=?,company_name=?,where id=?</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        update tb_brand</span><br><span class="language-xml"></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    brand_name=#</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    company_name=#</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;ordered!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                    ordered=#</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml"></span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;description!=null and description.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                    description=#</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">,</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                    status=#</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span></span><br><span class="language-xml">            where id=#</span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--trim+if--&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update2&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;brand&quot;</span>&gt;</span></span><br><span class="language-xml">        update tb_brand</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">trim</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;set&quot;</span> <span class="hljs-attr">suffixOverrides</span>=<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-attr">suffix</span>=<span class="hljs-string">&quot;where id=#</span></span></span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;brandName!=null and brandName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                brand_name=#</span><span class="hljs-template-variable">&#123;brandName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;companyName!=null and companyName.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                company_name=#</span><span class="hljs-template-variable">&#123;companyName&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;ordered!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                ordered=#</span><span class="hljs-template-variable">&#123;ordered&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;description!=null and description.length&gt;0&quot;</span>&gt;</span></span><br><span class="language-xml">                description=#</span><span class="hljs-template-variable">&#123;description&#125;</span><span class="language-xml">,</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span></span><br><span class="language-xml">                status=#</span><span class="hljs-template-variable">&#123;status&#125;</span><span class="language-xml"></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">trim</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--批量删除  delete from tb_brand where id in(6,7,8)--&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--foreach</span></span><br><span class="hljs-comment"><span class="language-xml">            foreach：遍历集合或数组参数 完成sql片段拼接 最终实现效果：(6,7,8)</span></span><br><span class="hljs-comment"><span class="language-xml">                collection属性：表示你要遍历的集合或数组</span></span><br><span class="hljs-comment"><span class="language-xml">                item属性：集合中的元素 迭代变量</span></span><br><span class="hljs-comment"><span class="language-xml">                open属性：表示sql片段开头</span></span><br><span class="hljs-comment"><span class="language-xml">                close属性：表示sql片段结尾</span></span><br><span class="hljs-comment"><span class="language-xml">                separator属性：表示元素与元素之间的分隔符</span></span><br><span class="hljs-comment"><span class="language-xml">            注意：foreach标签用于遍历list集合或数组参数，一般和in关键字一起使用。</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">delete</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class="language-xml">        delete from tb_brand where id in</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;ids&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;(&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span>&gt;</span></span><br><span class="language-xml">            #</span><span class="hljs-template-variable">&#123;id&#125;</span><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">delete</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/22/MyBatis%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/08/22/MyBatis%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h1><hr><h2 id="1-环境搭建步骤"><a href="#1-环境搭建步骤" class="headerlink" title="1.环境搭建步骤"></a>1.环境搭建步骤</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1.</span>新建模块<br><span class="hljs-number">2.</span>导入jar包<br><span class="hljs-number">3.</span>编写<span class="hljs-keyword">User</span>类<br><span class="hljs-number">4.</span>复制mybatis-config.xml到resources<br><span class="hljs-number">5.</span>修改连接池信息<br><span class="hljs-number">6.</span>编写接口<br><span class="hljs-number">7.</span>复制UserMapper.xml到resources<br><span class="hljs-number">8.</span>编写测试类<br></code></pre></td></tr></table></figure><blockquote><p>测试类<br>    <figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">@Test<br>   public void test01<span class="hljs-literal">()</span> throws IOException &#123;<br><br>       String resource = <span class="hljs-string">&quot;mybatis-config.xml&quot;</span>;<br>       <span class="hljs-comment">// 加载 mybatis-config.xml 文件, 变成流</span><br>       InputStream inputStream = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Resources</span>.</span></span>get<span class="hljs-constructor">ResourceAsStream(<span class="hljs-params">resource</span>)</span>;<br>       <span class="hljs-comment">// build(inputStream): 解析 mybatis-config.xml 和 UserMapper.xml 文件</span><br><br>       <span class="hljs-comment">// SqlSessionFactory: 相当于数据库连接池</span><br>       SqlSessionFactory sqlSessionFactory = <span class="hljs-keyword">new</span> <span class="hljs-constructor">SqlSessionFactoryBuilder()</span>.build(inputStream);<br><br>       <span class="hljs-comment">// openSession(): 打开会话,理解为获取数据库连接,  SqlSession: 相当于数据库连接</span><br>       SqlSession sqlSession = sqlSessionFactory.<span class="hljs-keyword">open</span><span class="hljs-constructor">Session()</span>;<br><br>       <span class="hljs-comment">// getMapper(UserMapper.class): 内部会使用动态代理生成接口的实现类 (代理对象)</span><br>       UserMapper mapper = sqlSession.get<span class="hljs-constructor">Mapper(UserMapper.<span class="hljs-params">class</span>)</span>;<span class="hljs-operator"></span><br><span class="hljs-operator"></span><br><span class="hljs-operator">       / </span>调用接口中的方法,执行对应的SQL语句, 把查询的结果变成User对象<br>       List&lt;User&gt; userList = mapper.find<span class="hljs-constructor">AllUsers()</span>;<br><br>       <span class="hljs-comment">// 遍历集合</span><br>       userList.<span class="hljs-keyword">for</span><span class="hljs-constructor">Each(System.<span class="hljs-params">out</span>::<span class="hljs-params">println</span>)</span>;<br><br>       <span class="hljs-comment">// 关闭会话, 相当于关闭数据库连接</span><br>       sqlSession.close<span class="hljs-literal">()</span>;<br>   &#125;<br></code></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/08/20/hello-world/"/>
    <url>/2022/08/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/20/arm_linux%E5%AE%89%E8%A3%85mysql8.0/"/>
    <url>/2022/08/20/arm_linux%E5%AE%89%E8%A3%85mysql8.0/</url>
    
    <content type="html"><![CDATA[<h1 id="ARM-Linux-安装-mysql-8-0"><a href="#ARM-Linux-安装-mysql-8-0" class="headerlink" title="ARM Linux 安装 mysql-8.0"></a>ARM Linux 安装 mysql-8.0</h1><hr><h2 id="1-maysql下载地址"><a href="#1-maysql下载地址" class="headerlink" title="1.maysql下载地址"></a>1.maysql下载地址</h2><p> <a href="https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-8.0/mysql-8.0.27-1.el7.aarch64.rpm-bundle.tar">https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-8.0/mysql-8.0.27-1.el7.aarch64.rpm-bundle.tar</a></p><hr><h2 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h2><p>1.解压tar<br>把安装包放在&#x2F;opt&#x2F;rmp目录下</p><p>3.依次安装mysql依赖包以及mysql</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">rpm</span> -ivh mysql-community-common-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-client-plugins-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-libs-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-libs-compat-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-devel-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-client-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br><span class="hljs-attribute">rmp</span> -ivh mysql-community-server-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-<span class="hljs-number">1</span>.el7.aarch64<br></code></pre></td></tr></table></figure><p>————————————————<br>版权声明：本文为CSDN博主「辉之不去的晓」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/shixiao1144/article/details/121692873">https://blog.csdn.net/shixiao1144/article/details/121692873</a><br>安装所有的rpm文件，强制安装，不检测依赖</p><p>参数说明：<br>&#96; &#96;&#96;  - i install 安装<br>   -v  view  显示安装过程<br>   -h  显示安装的进度条<br>   -forece  强制安装<br>   -nodeps  不检查依赖<br>   U 存在相同的软件或冲突的软件直接覆盖&#96;&#96;&#96;</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">cd rpm   进入rpm目录</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">rpm -ivhU * --force --nodeps</span><br><br></code></pre></td></tr></table></figure><p>4.检查安装好的mysql包<br><code>rpm -qa |grep mysql</code></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># -q 查询</span><br><span class="hljs-meta"># -a 所有软件</span><br><span class="hljs-meta"># 合在一起代表查询所有已安装的软件</span><br></code></pre></td></tr></table></figure><hr><h2 id="3-启动MySQL服务并登录"><a href="#3-启动MySQL服务并登录" class="headerlink" title="3.启动MySQL服务并登录"></a>3.启动MySQL服务并登录</h2><p>1.启动mysql的服务<br><code>&gt; systemctl start mysqld</code></p><p>2.将mysql加到系统服务中并设置开机启动</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-string">``</span>&gt; systemctl enable mysqld<span class="hljs-string">`</span><br><span class="hljs-string">`</span><br></code></pre></td></tr></table></figure><p>3.命令查看 mysql 服务状态失败<br><code>&gt; systemctl status mysqld.service</code></p><p>4.通过命令查看初始化密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt; grep <span class="hljs-string">&#x27;temporary password&#x27;</span> /var/<span class="hljs-keyword">log</span>/mysqld.<span class="hljs-keyword">log</span><br><span class="hljs-number">2022</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span>T21:<span class="hljs-number">19</span>:<span class="hljs-number">22.632137</span>Z <span class="hljs-number">6</span> [Note] [MY<span class="hljs-number">-010454</span>] [<span class="hljs-keyword">Server</span>] A <span class="hljs-keyword">temporary</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">generated</span> <span class="hljs-keyword">for</span> root@localhost: ~~~~~~~~~~~~<br><br></code></pre></td></tr></table></figure><p>5.登录mysql</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs smali">&gt; mysql -uroot -p~~~~~~~~~~~~<br><br>Welcome to the MySQ<span class="hljs-class">L monitor.  Commands end with ;</span><span class="hljs-built_in"> or </span>\g.<br>Your MySQL connection id is 18<br>Server version: 8.0.27<br><br>Copyright (c) 2000, 2021, Oracle<span class="hljs-built_in"> and/or </span>its affiliates.<br><br>Oracle is a registered trademark of Oracle Corporation<span class="hljs-built_in"> and/or </span>its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27;<span class="hljs-built_in"> or </span>&#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br></code></pre></td></tr></table></figure><p>6.更改密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt; <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;你的密码(三种字符八位以上)&#x27;</span>;<br><br>提示：“您的密码不符合当前的策略要求”<br>根据初始密码的设置规律设置密码再次尝试 满足密码要求<br>&gt; mysql&gt; <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;@ROOT979&#x27;</span>;<br>ERROR <span class="hljs-number">1819</span> (HY000): Your <span class="hljs-keyword">password</span> does <span class="hljs-keyword">not</span> satisfy the <span class="hljs-keyword">current</span> <span class="hljs-keyword">policy</span> requirements<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt; mysql&gt; <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;~~~~~~Ke~~~~.~~&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br></code></pre></td></tr></table></figure><p>7.修改远程登录(连接MySQL&#x2F;Navicat）</p><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk">&gt; mysql&gt; select user,authentication_string,host from user;<br><br>+------------------+------------------------------------------------------------------------+-----------+<br>| user             | authentication_string                                                  | host      |<br>+------------------+------------------------------------------------------------------------+-----------+<br>| mysql.infoschema | <span class="hljs-string">$A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$T</span>HISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHMUSTNRBRBEUSED | localhost<br>| mysql.session    |~~ <span class="hljs-string">$A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$T</span>HISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMEBEUSED~~ | localhost |<br>| mysql.sys        | ~~<span class="hljs-string">$A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$T</span>HISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMERBEUSED~~ | localhost |<br>| root             | <span class="hljs-string">$A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$=</span>^<span class="hljs-comment">&quot;^Zp0kaEh&quot;</span><br>                                         ~~<span class="hljs-number">5</span>+<span class="hljs-type">KRBRkY6p</span>.ghx6jv2shcU.sDF2zfg5YjlBcl2~~ | localhost |<br>+------------------+------------------------------------------------------------------------+-----------+<br><span class="hljs-number">4</span> rows in set (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host<span class="hljs-operator">=</span>&quot;%&quot; <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span><span class="hljs-operator">=</span>&quot;root&quot;;<br>Query OK, <span class="hljs-number">1</span> <span class="hljs-type">row</span> affected (<span class="hljs-number">0.01</span> sec)<br><span class="hljs-keyword">Rows</span> matched: <span class="hljs-number">1</span>  Changed: <span class="hljs-number">1</span>  Warnings: <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk">&gt; mysql&gt; select user,authentication_string,host from user;<br><br>+------------------+------------------------------------------------------------------------+-----------+<br>| user             | authentication_string                                                  | host      |<br>+------------------+------------------------------------------------------------------------+-----------+<br>| root             | <span class="hljs-string">$~</span>~<span class="hljs-type">A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$=</span>^<span class="hljs-comment">&quot;^Zp0k!aEh&quot;</span><br>                                         *<span class="hljs-number">5</span>+~~<span class="hljs-type">KRBRkY6p</span>.<span class="hljs-type">Pghx6bljvcA0U</span>.sDF2zfFuVg5Yj~~lBcl*<span class="hljs-number">2</span> ~~| %         |<br>| mysql.infoschema | <span class="hljs-string">$A</span>~~<span class="hljs-string">$0</span>05<span class="hljs-string">$T</span>HISISACOMBINATINOFVALIDSALTAASSWORDTHATMUSTNEVERBRB~~<span class="hljs-type">EUSED</span> | localhost |<br>| mysql.session    | <span class="hljs-string">$A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$~</span>~<span class="hljs-type">THISISACOMBIATIONOFINVALIDSALTANDPASRDTHATMUSTNEVERBRBEUSE</span>~~<span class="hljs-type">D</span> | localhost |<br>| mysql.sys        | <span class="hljs-string">$~</span>~<span class="hljs-type">A</span><span class="hljs-string">$0</span>05<span class="hljs-string">$T</span>HISISACOMBINTIOOFINVALDSALTANDPASWORDTHATMUSTNEVERBRBEUSE~~<span class="hljs-type">D</span> | localhost |<br>+------------------+------------------------------------------------------------------------+-----------+<br><span class="hljs-number">4</span> rows in set (<span class="hljs-number">0.01</span> sec)<br></code></pre></td></tr></table></figure><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">&gt; mysql&gt; FLUSH PRIVILEGES;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-built_in">rows</span> affected (<span class="hljs-number">0.01</span> <span class="hljs-built_in">sec</span>)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt; mysql&gt; <span class="hljs-keyword">exit</span>;<br>Bye<br><br></code></pre></td></tr></table></figure><p>8.开放Linux的对外访问的端口3306</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#开放的端口永久保存到防火墙</span><br>&gt; firewall-cmd <span class="hljs-attribute">--zone</span>=public <span class="hljs-attribute">--add-port</span>=3306/tcp --permanent<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#重启防火墙</span><br><span class="hljs-quote">&gt; systemctl restart firewalld</span><br></code></pre></td></tr></table></figure><p>9.连接客户端连接MySQL&#x2F;Navicat</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/08/10/SpringBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <url>/2022/08/10/SpringBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="Spring-Bean-的生命周期介绍"><a href="#Spring-Bean-的生命周期介绍" class="headerlink" title="Spring Bean 的生命周期介绍"></a>Spring Bean 的生命周期介绍</h1><p>   对于普通的Java对象，当new的时候创建对象，当它没有任何引用的时候被垃圾回收机制回收。而由Spring IoC容器托管的对象，它们的生命周期完全由容器控制，Spring Bean的生命周期是Spring面试热点问题。Spring Bean的生命周期指的是从一个普通的Java类变成Bean的过程。</p><p><img src="/assets/image-20220125064232137.png" alt="image-20220125064232137"> </p><h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><p><img src="/assets/image-20220125064442520.png" alt="image-20220125064442520"> </p><h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><h2 id="1-实例化Bean"><a href="#1-实例化Bean" class="headerlink" title="1.实例化Bean"></a>1.实例化Bean</h2><p>对于BeanFactory容器，当客户向容器请求一个尚未初始化的bean时，或初始化bean的时候需要注入另一个尚未初始化的依赖时，容器就会调用createBean进行实例化。 对于ApplicationContext容器，当容器启动结束后，便实例化所有的bean。 容器通过获取BeanDefinition对象中的信息进行实例化。并且这一步仅仅是简单的实例化，并未进行依赖注入。 实例化对象被包装在BeanWrapper对象中，BeanWrapper提供了设置对象属性的接口，从而避免了使用反射机制设置属性。</p><h2 id="2-设置对象属性（依赖注入）"><a href="#2-设置对象属性（依赖注入）" class="headerlink" title="2.设置对象属性（依赖注入）"></a>2.设置对象属性（依赖注入）</h2><p>实例化后的对象被封装在BeanWrapper对象中，并且此时对象仍然是一个原生的状态，并没有进行依赖注入。 紧接着，Spring根据BeanDefinition中的信息进行依赖注入。 并且通过BeanWrapper提供的设置属性的接口完成依赖注入。</p><h2 id="3-注入Aware接口"><a href="#3-注入Aware接口" class="headerlink" title="3.注入Aware接口"></a>3.注入Aware接口</h2><p>紧接着，Spring会检测该对象是否实现了xxxAware接口，并将相关的xxxAware实例注入给bean。<br>如果Bean类有实现org.springframework.beans.BeanNameAware接口，工厂调用Bean的setBeanName()方法传递Bean的ID。<br>如果Bean类有实现org.springframework.beans.factory.BeanFactoryAware接口，工厂调用setBeanFactory()方法传入工厂自身。</p><h2 id="4-BeanPostProcessor"><a href="#4-BeanPostProcessor" class="headerlink" title="4.BeanPostProcessor"></a>4.BeanPostProcessor</h2><p>当经过上述几个步骤后，bean对象已经被正确构造，但如果你想要对象被使用前再进行一些自定义的处理，就可以通过BeanPostProcessor接口实现。 该接口提供了两个函数：</p><ul><li>postProcessBeforeInitialzation( Object bean, String beanName ) 当前正在初始化的bean对象会被传递进来，我们就可以对这个bean作任何处理。 这个函数会先于InitialzationBean执行，因此称为前置处理。<br> 所有Aware接口的注入就是在这一步完成的。</li><li>postProcessAfterInitialzation( Object bean, String beanName ) 当前正在初始化的bean对象会被传递进来，我们就可以对这个bean作任何处理。 这个函数会在InitialzationBean完成后执行，因此称为后置处理。</li></ul><h2 id="5-InitializingBean与init-method"><a href="#5-InitializingBean与init-method" class="headerlink" title="5.InitializingBean与init-method"></a>5.InitializingBean与init-method</h2><p>当BeanPostProcessor的前置处理完成后就会进入本阶段。 InitializingBean接口只有一个函数：afterPropertiesSet()这一阶段也可以在bean正式构造完成前增加我们自定义的逻辑，但它与前置处理不同，由于该函数并不会把当前bean对象传进来，因此在这一步没办法处理对象本身，只能增加一些额外的逻辑。 若要使用它，我们需要让bean实现该接口，并把要增加的逻辑写在该函数中。然后Spring会在前置处理完成后检测当前bean是否实现了该接口，并执行afterPropertiesSet函数。当然，Spring为了降低对客户代码的侵入性，给bean的配置提供了init-method属性，该属性指定了在这一阶段需要执行的函数名。Spring便会在初始化阶段执行我们设置的函数。init-method本质上仍然使用了InitializingBean接口。</p><p>开发人员这里就可以从IOC容器获取Bean对象使用</p><h2 id="6-DisposableBean和destroy-method"><a href="#6-DisposableBean和destroy-method" class="headerlink" title="6.DisposableBean和destroy-method"></a>6.DisposableBean和destroy-method</h2><p>和init-method一样，通过给destroy-method指定函数，就可以在bean销毁前执行指定的逻辑。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>四个阶段</p><p>实例化 Instantiation<br>属性赋值 Populate<br>初始化 Initialization</p><p>​        开发人员从IOC获取对象使用 </p><p>销毁 Destruction</p><p><img src="/assets/2020072612595369.png" alt="img"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
